name: Time Catcher Past

on:
  push:
    branches: ["main"]
    tags:
  pull_request:
    branches: ["main"]

  workflow_dispatch:

  schedule:
    - cron: "* */1 * * *"

concurrency:
  group: time-catcher-past
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      fail-fast: false

      matrix:
        GIT_REPO:
          - minionFame/___time_2024_past
          # - minionFame/_time_2024_past
          # - minionFame/__time_2024_past
          # - fun-fame/__time_2024_past
          # - fun-fame/__time_2024_past
          # - fun-fame/_time_2024_past

    env:
      GIT_PASS: ${{ secrets.GIT_PASS }}
      GH_TOKEN: ${{secrets.GIT_PASS}}
      GIT_USERNAME: Nasfame
      GIT_EMAIL: laciferin2024@protonmail.com
      GIT_USER: Hiro
      GIT_REPO: ${{ matrix.GIT_REPO }}
      NO_OF_COMMITS: 1
      SLEEP_TIME: 10
      GIT_COMMIT_ARGS: '--date "96 days ago"'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10 on ubuntu-latest
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      #          cache: 'pip'

      - name: Create repo if necessary
        continue-on-error: true
        run: |
          gh repo create ${{env.GIT_REPO}} --private -d "Just catching commits in Time" -l MIT

      - name: Run time cacher for ${{env.GIT_REPO}}
        run: |
          python main.py
